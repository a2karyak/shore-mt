<std-header style='plain' orig-src='shore'>

 $Id: README-docs,v 1.6 1999/06/07 19:09:25 kupsch Exp $

SHORE -- Scalable Heterogeneous Object REpository

Copyright (c) 1994-99 Computer Sciences Department, University of
                      Wisconsin -- Madison
All Rights Reserved.

Permission to use, copy, modify and distribute this software and its
documentation is hereby granted, provided that both the copyright
notice and this permission notice appear in all copies of the
software, derivative works or modified versions, and any portions
thereof, and that both notices appear in supporting documentation.

THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
"AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

This software was developed with support by the Advanced Research
Project Agency, ARPA order number 018 (formerly 8230), monitored by
the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
Further funding for this work was provided by DARPA through
Rome Research Laboratory Contract No. F30602-97-2-0247.

  -- do not edit anything above this line --   </std-header>


This README is a quick guide to shore developers trying to understand the
stuff I put together to generate documents.  Currently, it only supports
documents, not man pages.  So far, I have converted sdlman and stree to
use the new stuff.

Imakefiles are in place, but might need more work. --NEH 4/19/95

The top-level Makefile does recursive makes on the subdirectories,
makes a "labels.pl" file from all the documents (a sort of master index)
and then re-does "make html" in all the subdirectories to rebuild with
the new labels.

=======
Outline (this really ought to be hypertext!)
=======

Intro:
Directories:	how things are layed out
Makefiles:		some info on how the Makefiles are supposed to work.
Suffixes:		conventions on file name suffixes
Commands:		new commands, such as \shoreversion, supported by this package
How It Works:	how the external label facility works
To Do:			things that don't work yet

=====
Intro
=====
The main idea is to take a source file (DOC.tex or DOC.src) and produce
both a PostScript version (DOC.psc) for printing and an html version
(DOC.html) for browsing.  The html versions all go into subdirectories
(one for each document) of a new directory "docs" created for the purpose. 
The PostScript versions stay in the source directories (subdirs of this one)
for copying to a target by "make install" (not implemented yet).

===========
Directories
===========

LIBDIR (currently /p/shore/documents/latex2html)
	A bunch of utilities and config stuff needed elsewhere.  This directory
	started out as the latest latex2html distribution, and then I added lots of
	stuff.  The important things in it are:
	latex2html: 
		An executable perl script to convert from LaTeX sources to html.
		The version here has a buch of bug fixes (see the rcs log),
		as well as an extension to support \SHsection etc (see below).
		It is configured (by the setting of the variable LATEX2HTMLDIR
		near the top of the script) to use various things in LIBDIR.
	file_changed:
		A shell file used by makefiles to decide whether it's necessary
		to rerun latex2html because some labels have changed.
		See comments in the file for more details.
	htmlinclude.awk:
		A shell file to support inclusion of source code examples in documents.
		See comments in the file for more details.
	html.sty, shore.sty:
		Files included, by virtue of the \documentstyle command, when
		a document is processed by LaTeX.  html.sty is unchanged from
		the latex2html distribution; shore.sty is new.
		They really should be inserted into whatever directory LaTeX normally
		used to look for .sty files, or else I should fix up the LATEXFILES
		environment variable appropriately, but for now I just put symlinks
		to these files in each directory in which LaTeX will be run.
	styles/html.perl, styles/shore.perl:
		These are used *instead of* html.sty and shore.sty when the document
		is being processed for html.  They are Perl source that gets
		dynamically loaded into latex2html itself.  To define
		a new command, add a \newcommand to shore.sty to define how it looks
		in LaTeX and add a function to styles/shore.sty to define how it
		looks in html.  WARNING:  These things are quire fragile, since
		they use functions and global variables defined elsewhere in
		the latex2html program.  Look at shorecopyright for an example
		of a parameterless macro, and dblquote as an example of a macro
		with one argument.  The name of the function has to be
		"do_cmd_COMMAND", where COMMAND is the name of the command.
	The remaining stuff has to do with configuring, installing, and testing
	latex2html itself.
DOCDIR (the directory containing this README: currently CVSROOT/releasedoc).
	labels.pl: 
		A cross-refernce table used by latex2html to process commands such
		as htmlextref.  It is actually Perl source.  It is built by
		DOCDIR/Makefile by merging together the labels.pl scripts from
		the individual documents.
		It is essentially just a map from global labels to file pathnames.
		Since this is a single flat space, global labels have to be unique
		across all documents.  I have used a convention of making all global
		labels have to format "<docname>:<label>".  For example the label
		"stree:goals" is defined in the stree document.  Latex2html
		removes all non-alphabetic characters when procesing labels,
		so this shows up in labels.pl as "streegoals".
	Makefile: (see below)
DOCDIR/docs
	A directory created to hold the generated html files.  There is one
	subdirectory for each document.
	DOCDIR/docs/DOC (for each document DOC, e.g. DOCDIR/docs/stree)
		The actual html pages generated.
		DOC.html:
			The root page of the document
		nodeNNN.html:
			Pages corresponding to subsections.
		footnode.html:
			All footnotes
		labels.pl:
			A directory of global labels defined by the document (see above).
DOCDIR/DOC (for each document DOC, e.g. DOCDIR/docs/stree)
	misc source files (see info on suffix conventions below)
	DOCDIR/DOC/DOC.psc (e.g. DOCDIR/stree/stree.psc)
		the PostScript version of the document
	DOCDIR/DOC/DOC (i.e., a subdir whose name is the same as the name of
			the document, e.g., DOCDIR/stree/stree)
		This is just a symlink to ../docs/DOC.
		For example, DOCDIR/stree/stree is a symlink to ../docs/stree,
		which is the same as DOCDIR/docs/stree.

=========
Makefiles
=========
DOCDIR/Makefile
	Its main job is to create and maintain DOCDIR/labels.pl and
	to recursively call make on subdirs.
	The macro DOCUMENTS is a list of all documents (and hence subdirectory
	names), currently "stree sdlman".
	Current entry points are
	subdirs:
		does a "make html" in each subdir
	html_clean:
		does a "make html_clean" in each subdir
	clean:
		does a "make clean" in each subdir
	all: (default)
		does "make html" in all subdirs to "prime the pump"
		regenerates labels.pl, and if that made changes,
		reruns "make html" in all subdirs to generate correct labels.pl's
			for all the documents
DOCDIR/DOC/Makefile
	The macro TARGET is the name of the document (i.e., DOC)
	The main entry points are
	all:
		both html and psc
	psc:
		generates the PostScript version of the document
	html:
		generates the html version of the document.  Note, this
		automatically runs LaTeX first, if necesary, to generate the .aux
		file, which is needed by latex2html.
	html_clean, latex_clean:
		undoes html and psc, respectively
	clean:
		both latex_clean and html_clean as well as any other document-specific
		cleanup.
	Sdlman also has junk to generate the grammar appearing in the
	appendix, which requires running yacc, cc, etc.  There is also
	a grammar_clean (includinded in clean) that gets rid of the .o's
	etc.  Other documents may have similar document-specific stuff.

	The Makefile automatically runs LaTeX twice to get cross referenes
	right, but only if necessary (and at most twice!)
	Similarly, it reruns latex2html if the labels.pl file changed.
	Each document should contain
		\externallabels{}{../../labels.pl}
		\externallabels{../DOC}{labels.pl}
	This is some magic that makes references to anchors in other documents
	to work right.  See "Commands" and "How it Works" for more details.
	The Makefile is set up so that changes to a document that change
	the set of labels it exports will cause latex2html to be run a second
	time to pick up the changes.   However, you have to do "make" in
	the top directory (DOCDIR) to make the changes visible to other documents.

========
Suffixes
========
	.src
		The actual source, in stree.  It is preprocessed by htmlinclude
		to produce stree.tex.  In sdlman sdlman.tex is the source file.
		Perhaps I should make DOC.src the primary source in all cases, for
		consistency
	.tex
		LaTeX source file.
	.aux .bbl .dvi .glo .idx .ind .lof .log .lot .toc 
		Junk created by LaTeX.  Of special interest are
		.dvi
			the actual output
		.aux
			stuff about labels and cross-refs, used by LaTeX iself as well
			as latex2html
	.out
		re-directed stdout from LaTeX
	.psc
		Generated PostScript: the result of runing dvips on the .dvi file.
		I use the suffix ".psc" rather than the more customary ".ps"
		so that I can easily find the expendable generated files (e.g. for
		"make clean").
	.ps
		PostScript source (e.g. idraw documents).  There are currently no
		examples of this.
	.html
		HyperText Markup Langauge:  genearated by latex2html for Web browsing.

========
Commands
========

Most ordinary LaTeX commands work as expected.  Some examples are
	\author
	\begin
	\date
	\documentstyle
	\em
	\end
	\footnote
	\item
	\label
	\makeindex
	\maketitle
	\pagebreak
	\pagestyle
	\sloppy
	\tableofcontents
	\thanks
	\title
	\today
	\tt
See any of the existing documents for examples of their use.
Some of them do something special in the html version.  For example,
\footnote (and \thanks) generates a little "footnote" icon which is a hot
link to the footnote, in the footnodes.html file.  Documentstyle
includes .sty files in the LaTeX version but .perl files in the html version
(see below).

New commands.  Some of these are part of latex2html and some are local
addtions implemented in shore.sty and styles/shore.perl.
	\SHsection{LABEL}{STRING}
	\SHsubsection{LABEL}{STRING}
	\SHsubsubsection{LABEL}{STRING}
	\emdash
	\ndash
	\dblquote{STRING}
	\shorecopyright
	\shoreversion
	\externallabels{PREFIX}{LABELS.PL}
	\htmlextref{STRING}{LABEL}
	\htmladdnormallink{STRING}{URL}
	\hyperref{STRING}{PREFIX}{SUFFIX}{LABEL}
Detailed descriptions follow.

\SHsection{LABEL}{STRING}
\SHsubsection{LABEL}{STRING}
\SHsubsubsection{LABEL}{STRING}
	These are like the LaTeX commands \section, etc., but define a
	label, supplied as an extra argument e.g.
		\SHsubsection{stree:goals}{What this Tutorial Is}
	In the LaTeX version this is like
		\subsection{What this Tutorial Is}
		\label{stree:goals}
	so that "stree:goals" is bound to the correct section number (e.g.
	"2.1").  In the html version, it is like
		\label{stree:goals}
		\subsection{What this Tutorial Is}
	so that following a hot-link to "stree:goals" puts the section header
	at the top of your screen (latex2html turns the label into an
	anchor associated with a special invisible string because html requires
	an anchor to be associated with a non-null string).
		
\emdash
	"--" in the html version
	an "em" dash in the LaTeX version (specified as "---" in LaTeX input)
\ndash
	"-" in the html version
	an "en" dash in the LaTeX version (specified as "--" in LaTeX input)
\dblquote{STRING}
	&quot;STRING&quote; in the html version
	``STRING'' in the LaTeX version
\shorecopyright
	an appropriate copyright mesage.  Edit both shore.sty and
	styles/shore.perl to change it.  Currently, in the html version it is
		<em>Copyright (c) 1994-5 <br> Computer Sciences Department,
		University of Wisconsin--Madison. <br> All Rights Reserved.</em>
	and in the LaTeX version it is
		{\em Copyright \copyright 1994--5} \\
		{\em Computer Sciences Department, University of Wisconsin---Madison.} \\
		{\em All Rights Reserved.}
\shoreversion
	currently,
		Version 1.0 
	in both versions.  Edit both shore.sty and styles/shore.perl to
	change it.
\externallabels{PREFIX}{LABELS.PL}
	tells latex2html how to use the labels.pl file to convert "external"
	rerences.  LABELS.PL is the pathname of a labels.pl file (relative
	to the directory containing the resulting .html file: DOCDIR/DOC/DOC).
	PREFIX is a prefix to be added to the URL found in the labels file.
	You don't have to understand how this works.  Just make sure that
	in put near the top of your document the two calls
		\externallabels{}{../../labels.pl}
		\externallabels{../DOC}{labels.pl}
	where "DOC" is the name of the document, e.g.
		\externallabels{}{../../labels.pl}
		\externallabels{../sdlman}{labels.pl}
	(If you really want to know how this works, see "How It Works" below).

\htmlextref{STRING}{LABEL}
	In the LaTeX version, this just expands to STRING.
	In the html version, it expands to a "hot" version of STRING that
	takes you to the anchor bound to LABEL.  For example,
		such as \htmlextref{sequences}{sdlman:sequence} or
	becomes
		such as sequences or
				---------
	where the word "seqences" is highlighted in the html version.
	Clicking on "sequences" takes you to label "sdlman:sequence" (a label
	defined in sdlman, according to the conventions described in the
	Directories section above). See below for how this works.
	The LABEL does not have to be an external reference (and thus perhaps
	I should rename the command); any label set by \label (or \SHsection,
	etc.) in any document in this system (including the current
	document) is a legitimate target.
\htmladdnormallink{STRING}{URL}
	This is similar to htmlextref, but assumes you know the exact URL.
	It was already present in the "standard" latex2html package.
\hyperref{STRING}{PREFIX}{SUFFIX}{LABEL}
	Similar to htmlextref, but in the LaTeX version, it expands to
		PREFIX x.y SUFFIX
	where "x.y" stands for the string bound to the label by LaTeX.
	It was already present in the "standard" latex2html package.
	For example, if \label{stree:mainFUNC} appears in section 1.2.3, then
		The \hyperref
			{main program}
			{main program (see Section }
			{ for a listing)}
			{stree:mainFUNC}
	exapands in html to 
		The main program
	(with "main program" a hot link), while in the LaTeX version, it
	becomes
		The main program (see Section 1.2.3 for a listing)
	This doesn't work across document boundaries (yet).

============
How It Works
============
Here is an explanation how \externallabels, \htmlextref,
etc. work, in case you're curious.  (Actually, the real reason
I'm documenting it here is so that I can fix it when it breaks,
as it certainly will some day!)

The command \label{sdlman:sequence} in the sdlman.tex (or any other command
that generates a call on \label, such as \SHsection) causes LaTeX
to put the line like this:
	\newlabel{sdlman:sequence}{{}{0}}
into sdlman.aux, which is converted by latex2html into
	$external_labels{"sdlmansequence"} ="$URL/node11.html";
in labels.pl.  Latex2html also converts \label{sdlman:sequence} directly
into
	<A NAME=sdlmansequence>&#160;</A>
in docs/sdlman/node11.html.

When latex2html encounters \externallabels{PREFIX}{LABELS.PL},
it sets the Perl variable URL to PREFIX and then "sources"
the Perl source file LABELS.PL.  At the time it does this, cwd is
DOCDIR/DOC/DOC, which is why relative paths have to be relative to
that directory.  With the setup decribed above under Directories,
the "global" labels.pl file is "../../labels.pl" and the "local"
one is simply "labels.pl".

The local labels.pl is just a bunch of assignments to an associative
array such as
	$external_labels{"sdlmansequence"} ="$URL/node11.html";
generated from sdlman.aux as above.  Thus, for example, 
	\externallabels{../sdlman}{labels.pl}
ends up binding the string "sdlmansequence" to
	"../sdlman/node11.html"
in the mapping defined by the associative array external_labels.

The global labels.pl is just a concatenation of local labels.pl files,
with each one preceded by an assignment to the variable URL.
For example it contains the lines
	$URL="../sdlman";
	$external_labels{"sdlmansequence"} ="$URL/node11.html";
In this case, the first argument to \externallables has no effect,
since the labels.pl file overrides it.  Thus the net effect is
to add the binding
	"stdmansequence" -> "../sdlman/node11.html"
exactly as before.  However, the local labels.pl file is
generally updated more frequently than the global one, so its
binding is more likely to be up-to-date.

When latex2html encounters
	\htmlextref{sequences}{sdlman:sequence}
in stree.tex, it looks up "sdlmansequence" in external_labels,
finds it bound to "../sdlman/node11.html", and replaces the command with
	<A HREF="../sdlman/node11.html#sdlmansequence">sequences</A>
Since a relative path is used, this should all still work if the docs
dir is moved, together with all its subdirs, to a new location.

=====
To Do
=====
There should be something that combines the functions of \htmladdnormallink
or \htmlextref (for linking to other documents) with \hyperref (which
customizes the output for the printed (LaTeX) version but doesn't work
accross document boundaries.

No "make install" yet.  For the html version, this just needs to be a cp -R
of docs to a dest location.  For the hard-copy versions, it needs
	cp $(DOC).psc $(DESTDIR)
in each source dir, and a top-level loop to call them all.

More commands, in particularly \seealso (for reference to man pages)
and glossary support.
Need to go through all existing documents and see what they need.

On an initial make, the top-level Makefile does, essentially,
	trunc labels.pl
	for all subdirs do make html
	rebuild labels.pl
	for all subdirs do make html
	rebuild labels.pl
Thus, when it's done, everything is ok, but if you immediately do another
make, all the subdirs will think they need to redo the html, because the
global labels.pl is new.  The easiest way to fix this is to "back-date"
the labels.pl after the last build.  That's easy with the gnu version of
touch, but not the "standard" one.  I'll have to figure out a new scheme.

Go through all documents and fix all explicit URL's in things like
\htmladdnormallink and \hyperref.

Others I haven't even thought of yet.

