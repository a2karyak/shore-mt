/*<std-header style='imakefile' orig-src='shore'>

 $Id: Imakefile,v 1.9 1999/06/07 19:09:25 kupsch Exp $

SHORE -- Scalable Heterogeneous Object REpository

Copyright (c) 1994-99 Computer Sciences Department, University of
                      Wisconsin -- Madison
All Rights Reserved.

Permission to use, copy, modify and distribute this software and its
documentation is hereby granted, provided that both the copyright
notice and this permission notice appear in all copies of the
software, derivative works or modified versions, and any portions
thereof, and that both notices appear in supporting documentation.

THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
"AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

This software was developed with support by the Advanced Research
Project Agency, ARPA order number 018 (formerly 8230), monitored by
the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
Further funding for this work was provided by DARPA through
Rome Research Laboratory Contract No. F30602-97-2-0247.

  -- do not edit anything above this line --   </std-header>*/

CMNT Top-level Makefile for Shore documentation -- Beta release version
CMNT (Perhaps to be replaced with an Imakefile at a future date).

DOCUMENTS =  \
	release \
	bugreport \
	dirscan \
	glossary \
	installation \
	overview \
	plans \
	poolscan \
	running \
	sdlman\
	shrc \
	ssmapi\
	ssmvas\
	stree \
	sourceguide

LIBDIR = /p/shore/documents/latex2html
FILE_CHANGED = $(LIBDIR)/file_changed
DOC = 
POST_SUBDIRS = $(DOCUMENTS) 

html-all ps-all all:: directories docs 
	@if $(MAKE) -i remake; then \
		echo '=== ' rebuilding documents to get cross-refs right; \
		$(MAKE) remake; \
	else exit 0; fi

remake: save_labels $(DOCUMENTS) make_labels
	@if $(FILE_CHANGED) labels.pl; then \
		echo "***" error: labels have not converged; \
		exit 1; \
	else \
		exit 0; \
	fi; \

save_labels: labels.pl
	@echo "=== saving labels.pl"
	@cp -p labels.pl labels.pl.bak

labels.pl:
	@echo "=== initializing labels.pl"
	echo "#!/s/std/bin/perl -s" > labels.pl
	echo "1;" >> labels.pl
	chmod +x labels.pl

directories::
	@if test ! -d docs; then mkdir docs; fi
	@if test ! -d ps; then mkdir ps; fi
	@if test ! -d docs/icons; then\
		mkdir docs/icons;\
		cp -r /p/shore/documents/latex2html/icons docs; \
	fi
	@-for x in man $(DOCUMENTS); \
	do \
		if test ! -d docs/$$x; then mkdir docs/$$x; fi;\
	done

docs::
	@-for x in man $(DOCUMENTS); \
	do \
		if test ! -d docs/$$x; then mkdir docs/$$x; fi;\
		(cd $$x; $(MAKE) $(OPTIONS)); \
	done

make_labels:
	@echo '=== ' gathering labels from $(DOCUMENTS)
	@$(RM) labels.pl
	@for x in $(DOCUMENTS); \
	do \
		if test -r docs/$$x/labels.pl ; \
		then \
			echo '$$URL="'"../$$x"'";' >>labels.pl; \
			echo '' >> labels.pl; \
			grep external_labels docs/$$x/labels.pl >> labels.pl; \
			echo '' >> labels.pl; \
		else \
			echo "Warning: no labels.pl file in docs/$$x"; \
		fi; \
	done
	@echo "1;" >> labels.pl

SUBDIRCOMMANDS = depend install clean_install html_clean clean html ps

install::
	echo '===  making target "remake" to get cross-refs right'
	$(MAKE) remake 
	echo '===  installing man pgs in ' $(INSTALL_DIR)/docs.html;
	mkdir -p $(INSTALL_DIR)/docs.html/man
	cp -r docs/man $(INSTALL_DIR)/docs.html
	echo '===  installing docs in ' $(INSTALL_DIR)/docs.html;
	@-for x in icons $(DOCUMENTS); \
	do \
		if test -d docs/$$x; then cp -r docs/$$x $(INSTALL_DIR)/docs.html; fi;\
	done

install_copy(docs.ps, `ls "ps/*.ps" `)
install_copy(/, readme/README)


clean:: clean_here

clean_here::
	-$(RM) labels.pl*
	-$(RM) -r docs

