.TH ssm_options ssm "Jan 1999" "Release \*(SV" "Shore Storage Manager" "Release 2.0" "Shore Storage Manager Reference Manual"
.so tmac.man.local
.SH NAME
ssm_options \- Run-time options used by the Shore Storage Manager
.SH DESCRIPTION
The Shore Storage Manager (SSM) recognizes following run-time options.  
Values for these options are generally stored in a file, but can also
be read from command lines of servers (it all depends on what the
server is written to do).  A sample configuration option file is 
.CW 
ssh/.shoreconfig.example,
.RR
which is in the source release.

.LP

The following options must be supplied (they do not have default values): 

.IP "sm_bufpoolsize" 5
Determines the size of the buffer pool in kilobytes.
.B Values: 
integer greater than or equal to 80 (10 pages' worth).

.IP "sm_logdir" 5
Determines the location of the log.  
.B Values: 
path name for a raw device or a directory.  May be relative or
absolute.

.LP

The following options have default values:

.IP "sm_reformat_log" 5
Determines whether the logs will be reformatted, bypassing any recovery.
.B Values: 
yes, no.
.B "Default value:"
no.

.IP "sm_prefetch" 5
Determines whether, during a file scan, pages will be prefetched using
some experimental prefetch code.
.B Values: 
yes, no.
.B "Default value:" 
no.

.IP "sm_locktablesize" 5
Determines size of lock table in buckets.  
some experimental prefetch code.
.B Values: 
integer greater than or equal to 64.  Whatever value
you give is rounded up to the nearest power of 2, then converted
to the largest prime number less than that power of 2, up to a
maximum of 8388593 (prime less than 2 ** 23 == 8388608).
.B "Default value:" 
64000 (results in 65521 buckets).

.IP "sm_logsize" 5
Determines the upper limit on the log in kilobytes.  If 0 is given,
and the path given for 
.CW sm_logdir 
.RR
names
a raw device, the real device size is used.
When the log is a directory, it comprises 8 partitions. 
Each partition can reach at most 1/8 the total logsize given here.
When half a max-sized partition is written or 1 MB is written, whichever comes first,
a checkpoint is forced.
.B Values: 
Values: 0 or integer > 1000.
.B "Default value:" 
10000 (10 MB).

.IP "sm_logbufsize" 5
Determines the size of the buffer used for buffering log records
in shared memory (in Unix only) in kilobytes.  
.B Values: 
Values: integer representing between 4 and 128 pages, inclusive.
.B "Default value:" 
128 (128 KB or 16 pages when built with 8KB pages).

.IP "sm_backgroundflush" 5
Determines whether the background buffer-cleaner thread is enabled.  (This
thread implements the `steal' buffer-management policy.)
.B Values: 
Values: yes, no
.B "Default value:" 
yes

.IP "sm_diskrw" 5
Path name to the disk I/O program forked by the SM.  Not applicable on NT. 
.B Values: 
Values: path name
.B "Default value:" 
diskrw

.IP "sm_errlog" 5
Determines where certain error logging will be written.
.B Values: 
Values: - (indicates stderr) or a file name.
.B "Default value:" 
-

.IP "sm_errlog_level" 5
Determines what level of seriousness of messages will be logged.
These values correspond to the Unix syslog levels.
All the logging messages in the SM have seriousness 
.CW
error 
.RR 
or
.CW 
info.
.RR 
.B Values: 
Values: none, emerg, fatal, alert, internal, error, warning, info, debug
.B "Default value:" 
error

.LP
The next three options determine how many fine-grained locks on a 
given resource cause the lock manager to escalate to a resource-level lock.
With the default values, 
the lock manager will never escalate a request for a file lock  to a request for a volume lock;
after 25 requests for pages in the same store, it will escalate a request for
a page lock to a request for a store lock, and
after 5 requests for records on the same page, it will escalate a request for
a record lock to a request for a page lock.
If you do not want any lock escalation, set all three options to 0.

.IP "sm_lock_escalate_to_page_threshold" 5
.B Values: 
Values: 0 (no escalation) or positive integer
.B "Default value:" 
5
.IP "sm_lock_escalate_to_store_threshold" 5
.B Values: 
Values: 0 (no escalation) or positive integer
.B "Default value:" 
25
.IP "sm_lock_escalate_to_volume_threshold" 5
.B Values: 
Values: 0 (no escalation) or positive integer
.B "Default value:" 
0

.IP "sm_num_lid_cache_entries" 5
Determines the size of the logical-id cache.  
.B Values: 
Values are integers greater than 0.  
.B "Default value:" 
10000.

.IP "sm_cc_alg" 5
Default locking protocol for files.   
.B Values: 
record, page, file.
.B "Default value:" 
record.
(A transaction's locking protocol can be
set explicitly with 
.FN ss_m::set_xct_lock_level(concurrency_t level).)

.IP "sm_log_warn" 5
Threshhold (in percent) of log used by active transactions,
at which callback is made.
.B Values: 
0 - 100
.B "Default value:" 
40.

.LP
The following options are for internal use by the developers of the
Storage Manager and should not be changed:

.IP "sm_bfm_strategy" 5
For testing different buffer-manager strategies.  No alternatives are
implemented in this release.

.IP "sm_processor_set" 5
Ignored unless the SM is configured and built on a Sparc/Solaris with
SOLARIS2_PSETS #defined in the shore.def file, 
and processor sets are supported on the architecture.

.IP "sm_logging" 5
Turn on/off logging.  SM is not guaranteed to work if turned off.

.IP "sm_scriptlog" 5
Ignored.

.IP "sm_scriptlog_level" 5
Ignored.

.IP "sm_dcommit_timeout" 5
Used for distributed transaction commit coordinator (not in this release).


.DA
.SH "SEE ALSO"
.SA options(common),
