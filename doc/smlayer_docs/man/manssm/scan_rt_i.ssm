.TH scan_rt_i ssm "Jan 1999" "Release \*(SV" "Shore Storage Manager" "Release 2.0" "Shore Storage Manager Reference Manual"
.so tmac.man.local
.SH NAME
scan_rt_i \- Class for Scanning an R*tree index in the Shore Storage Manager

.SH SYNOPSIS
.EX
#include <sm_vas.h>  // which includes scan.h

class scan_rt_i {
public:

    stid_t			stid;
    tid_t			tid;
    ndx_t 			ntype;
    serial_t			serial;  // serial number if store has
					 // a logical ID 
    
    /* Logical-ID version */
    NORET			scan_rt_i(
	const lvid_t& 		    lvid, 
	const serial_t& 	    stid,
	sob_cmp_t 		    c,
	const nbox_t& 		    box,
	bool                        include_nulls=false,
	concurrency_t		    cc = t_cc_page);

    /* Physical-ID version */
    NORET			scan_rt_i(
	const stid_t& 		    stid, 
	sob_cmp_t 		    c,
	const nbox_t& 		    box,
	bool                        include_nulls=false,
	concurrency_t		    cc = t_cc_page);

    NORET			~scan_rt_i();
    
    rc_t			next(
	nbox_t& 		    key,
	void* 			    el,
	smsize_t&		    elen, 
	bool& 		    	    eof);

    void			finish();
    
    bool			eof()	{ return _eof; }
    bool			error_detected()
};


.EE
.SH DESCRIPTION
Class
.FN scan_rt_i supports scanning an R*tree index.

.IP

TODO

.SS Updates While Scanning
.LP
A common question is what is the effect of changes to an index
made by a transaction that is also scanning the index.
It is not safe to change anything in the file
while scanning.  Instead, a list of changes should be made during
the scan and only performed after the scan is complete.


.SH Null Values
.LP
R-trees can contain entries with "null" keys, which are
represented by polygons of dimension 0.  The data type
.EX
class nbox_t
.EE
contains 
.EX
bool nbox_t::is_Null() const;
static nbox_t& nbox_t::Null;
.EE
for creating and detecting null keys in R-trees.
.LP
When scanning an R-tree index, you can skip (default) or
collect the entries with "null" keys, according to the value
given in the
.VA include_nulls
argument when you create the iterator.
.LP
The semantics of a search with nulls is as follows:
.IP inside 5
Null is inside everything, including Null.
.IP cover 5
Null covers nothing except Null.
.IP overlap 5
Null overlaps everything (and everything overlaps null).

.SH ERRORS
To do.

.DA
.SH "SEE ALSO"
.SA rtree(ssm),
.SA scan_index_i(ssm)
.SA intro(ssm),

