.TH SEVSEM_T STHREAD "Jan 1999" Release \*(SV" "Shore Storage Manager" "Release 2.0" "Shore Storage Manager Reference Manual"
.so tmac.man.local
.SH NAME
sevsem_t \- Shore Event Semaphore Class
.SH SYNOPSIS
.EX
#include <sthread.h>

/*
 *  Event semaphore
 */
class sevsem_t : public sthread_base_t {
public:
    NORET			sevsem_t(
	int 			    is_post = 0,
	const char* 		    name = 0);
    NORET			~sevsem_t();

    w_rc_t			post();
    w_rc_t			reset(int* pcnt = 0);
    w_rc_t			wait(int4_t timeout = WAIT_FOREVER);
    void 			query(int& pcnt);
    
    void	 		setname(
	const char* 		    n1, 
	const char* 		    n2 = 0);
};

.EE
.SH DESCRIPTION

An event semaphore functions as a counting semaphore in that a thread
can use an event semaphore to trigger execution of other threads. This
is useful if, for example, one thread (producer) provides data to many
other threads (consumer). Using an event semaphore frees the consumers
from the trouble of polling to determine when new data is available.

.LP
.B "sevsem_t(is_post, name)"
.IP
The constructor creates an event semaphore.  The
.VA name
parameter is stored in the semaphore for debugging purposes.  If 
.VA is_post
is 
.FN true,
the event semaphore is set to
posted right after construction. Otherwise, the event semaphore is
reset after construction.

.LP
.B "~sevsem_t()"
.IP

.LP
.B "reset(pcnt)"
.IP
The
.FN reset
method resets the event semaphore (i.e.\,reset post count to 0),
and returns the number of times the semaphore was posted since it was
last reset in 
.VA pcnt.
All threads that subsequently wait on this semaphore will be blocked.

.LP
.B "post()"
.IP
The
.FN post
method posts the semaphore and increments the post count. All threads
waiting on this semaphore are unblocked and resume execution. Threads
that wait on the semaphore after the semaphore has been posted and
before the next time it is reset, will not be blocked. If the semaphore
is subsequently reset, threads that calls 
.FN wait()
will again be blocked.
.IP
If the semaphore is reset when 
.FN post
is called, the semaphore is
posted and the post count is set to 1.  If the semaphore is already
posted when 
.VA post
is called, the post count is incremented, and an error, 
.FN stSEMPOSTED,
is returned to the calling thread.

.LP
.B "wait(timeout)"
.IP
The
.FN wait
method waits on the event semaphore.  If the semaphore is already
posted, 
.FN wait
returns immediately and the thread continues to run. Otherwise, the
thread is blocked until the semaphore is posted. Note that 
.FN wait
does not decrement the post count; only 
.FN reset
modifies the post count in any way.

.LP
.B "query(pcnt)"
.IP
The
.FN query
method returns, in
.VA pcnt,
the number of times the semaphore was posted since it was
last reset.


.SH ERRORS

TODO.

.SH EXAMPLES

TODO.

.DA
.SH "SEE ALSO"
.SA errors(sthread),
.SA sthread_t(sthread),
.SA smutex_t(sthread),
.SA scond_t(sthread),
.SA file_handlers(sthread),
.SA intro(sthread).

