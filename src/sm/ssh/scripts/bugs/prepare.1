# <std-header style='tcl' orig-src='shore'>
#
#  $Id: prepare.1,v 1.6 1999/06/07 19:05:53 kupsch Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#
#	Test prepare tx
#

source $script_dir/vol.init

set form %09000d
proc scanit { f } {
    set scan [sm scan_file_create $f t_cc_record]
    set pin [sm scan_file_next $scan 0]
    set i 0
    while {$pin != "NULL"} {
	set rec [sm pin_rid $pin]
	echo rec: $rec
	sm pin_unpin $pin
	set pin [sm scan_file_next $scan 0]
	set i [expr {$i+1} ]
    }
    sm scan_file_destroy $scan
    echo scan found $i records
}

set numrecs 3

sm begin_xct
set f0 [sm create_file $volid]]
echo created file $f0
for { set i 1} { $i <= $numrecs} { incr i} {
    set j [sm create_rec $f0 h$i 1000 [format $form $i] ]
    echo created rec $j
}
echo created $numrecs recs file $f0

set finish "xxxxx"
sm enter2pc $finish
sm prepare_xct
set tid [sm xct_to_tid [sm xct]]

echo restarting... with prepared tx $tid
restart

set x [sm tid_to_xct $tid]

echo attaching to prepared tx $tid ...
sm attach_xct $x
echo attached to prepared tx $tid
sm commit_xct

sm begin_xct
echo SHOULD CONTAIN $numrecs RECORDS
scanit $f0
sm destroy_file $f0
echo destroyed file $f0
sm commit_xct


#same as above but instead of commiting, abort

sm begin_xct
set f0 [sm create_file $volid]]
echo created file $f0
for { set i 1} { $i <= $numrecs} { incr i} {
    set j [sm create_rec $f0 h$i 1000 [format $form $i] ]
    echo created rec $j
}
echo created $numrecs recs file $f0

sm enter2pc $finish
sm prepare_xct
set tid [sm xct_to_tid [sm xct]]

restart

set x [sm tid_to_xct $tid]
sm attach_xct $x
sm abort_xct

sm begin_xct
echo SHOULD NOT EXIST
scanit $f0
sm destroy_file $f0
echo destroyed file $f0
sm commit_xct

unset $finish

