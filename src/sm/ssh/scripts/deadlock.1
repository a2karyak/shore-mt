# <std-header style='tcl' orig-src='shore'>
#
#  $Id: deadlock.1,v 1.13 1999/06/07 19:05:25 kupsch Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#  Testing that the following scenario is NOT a deadlock.
#
#  {1IS, 2IX} <-- 3S
#  {3X} <-- 1IS
# 

##########  global variables  ##########

set o1 "10"
set o2 "20"

proc t1 {} {
    global o1 o2
    sm begin_xct
    sm lock $o1 IS LONG
    verbose "t1: IS granted on o1"
sync
sync
    verbose "t1: IS requested on o2"
    sm lock $o2 IS LONG
    verbose "t1: IS granted on o2"
    sm commit_xct
}

proc t2 {} {
    global o1 o2
    sm begin_xct
    sm lock $o1 IX LONG
    verbose "t2: IX granted on o1"
sync
sync
sync
    sm commit_xct
    verbose "t2: commit, release IX lock on o1"
}

proc t3 {} {
    global o1 o2
    sm begin_xct
    sm lock $o2 EX LONG
    verbose "t3: EX granted on o2"
sync
sync
    verbose "t3: SH requested on o1"
    sm lock $o1 SH LONG
    verbose "t3: SH granted on o1"
    sm commit_xct
}

##########  main  ##########

    set x [fork_thread t1 {}]
    set y [fork_thread t2 {}]
    set z [fork_thread t3 {}]

    sync_thread $x $y $z
    verbose "setup completed --- {1IS, 2IX},  {3X}"
    if {$verbose_flag}  {
	sm dump_locks
    }
    sync_thread $z 
    sync_thread $x
    sync_thread $y
    sync_thread $y
    join_thread $x $y $z
verbose "SUCCESS"

unset o1 o2
unset x y z

