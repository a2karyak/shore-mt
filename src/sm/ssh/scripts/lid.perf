# <std-header style='tcl' orig-src='shore'>
#
#  $Id: lid.perf,v 1.9 1999/06/07 19:05:32 kupsch Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#
#	Time logical ID cache operations
#
source $script_dir/vol.init

proc lid_stats {} {
    set stats [sm gather_stats]
    set req_i [expr [lsearch $stats lid_lookups] + 1]
    set acq_i [expr [lsearch $stats lid_remote_lookups] + 1]
    set hit_i [expr [lsearch $stats lid_cache_hits] + 1]
    set result [list "l=" [lindex $stats $req_i] "r=" [lindex $stats $acq_i] "h=" [lindex $stats $hit_i]]
    return $result
}

set config [sm config_info]
echo config $config

set num_add 4000

sm begin_xct

set fid [sm create_file $volid]

set dummy [sm gather_stats reset]
sm set_lid_cache_enable enable
set lid_time [ time {
    sm test_lid_cache $volid $num_add
} 1 ]
echo
echo cached=[sm lid_cache_enabled]
echo "\t" $lid_time , [lid_stats]

set dummy [sm gather_stats reset]
sm set_lid_cache_enable disable
set lid_time [ time {
    sm test_lid_cache $volid $num_add
} 1 ]
echo
echo cached=[sm lid_cache_enabled]
echo "\t" $lid_time , [lid_stats]

echo Now timeing test_lid_cache 1 followed by serial_to_stid
set dummy [sm gather_stats reset]
sm set_lid_cache_enable enable
set lid_time [ time {
    sm test_lid_cache $volid 1
    sm serial_to_stid $fid
} $num_add ]
echo
echo cached=[sm lid_cache_enabled]
echo "\t" $lid_time , [lid_stats]

set dummy [sm gather_stats reset]
sm set_lid_cache_enable disable
set lid_time [ time {
    sm test_lid_cache $volid 1
    sm serial_to_stid $fid
} $num_add ]
echo
echo cached=[sm lid_cache_enabled]
echo "\t" $lid_time , [lid_stats]

sm commit_xct

