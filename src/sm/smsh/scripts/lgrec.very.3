# <std-header style='tcl' orig-src='shore'>
#
#  $Id: lgrec.very.3,v 1.4 1999/06/07 19:05:32 kupsch Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#
#	Test large record (10 MB) creation, enough in one file
#	to create a very large file (10 GB)
#
source $script_dir/vol.init

set recsz 10000000
set nrecs 1000
set pgs_per_rec  [expr { ( $recsz / $lg_rec_page_space ) + 1 } ]
set pages_needed  [expr { $pgs_per_rec * $nrecs } ]
set pages_in_volume [expr {$sm_max_exts * $pages_per_ext}]
set cluster_page  [expr {(($sm_max_exts * $pages_per_ext) - $pages_needed)- 1}]

if [ expr {$cluster_page<0}] {
    echo "Volume not large enough"
    exit 1
}

source $script_dir/lgrec.very.0

# 	Now do the reverse: create many small records

set nrecs 10000000
set recsz 1000

unset recsz nrecs 
source $script_dir/lgrec.very.0

