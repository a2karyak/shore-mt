# --------------------------------------------------------------- #
# -- Copyright (c) 1994, 1995 Computer Sciences Department,    -- #
# -- University of Wisconsin-Madison, subject to the terms     -- #
# -- and conditions given in the file COPYRIGHT.  All Rights   -- #
# -- Reserved.                                                 -- #
# --------------------------------------------------------------- #

#
#	Test expandable sdesc_cache_t structures.
#       This is for partitioning a data set among a bunch of files.
#

source $script_dir/vol.init

set nobjs 20
set nfiles1 1
set nfiles2 20
set nfiles3 50
set nfiles4 10

set objsize 4000
set hdr ""
set id_body_width zvec%d
set body [format $id_body_width $objsize]

sm begin_xct
for {set i 1} {$i <= $nfiles1} {incr i} {
    echo create file f($i)
    set f($i) [sm create_file $volid regular]
    echo created file $f($i)
}

#fill up input files
set k 0
for {set i 1} {$i <= $nfiles1} {incr i} {
    for {set k 0} {$k < $nobjs} {incr k} {
	set rec [sm create_rec $f($i) $hdr $objsize $body]
    }
}
sm commit_xct

proc doit { a b x } {
    global f hdr objsize body volid

    echo doit $a $b $x

    #create the output files
    for {set j [expr {$b+1}]} {$j <= [expr {$b+$x}]} {incr j} {
	echo create file f($j)
	set f($j) [sm create_file $volid tmp] 
	echo created file $f($j)
    }
    # read from input file(s)
    for {set i $a} {$i <= [expr {$b+$a}]} {incr i} {
	set scan($i) [sm scan_file_create $f($i) t_cc_record]
	echo scan $i is $scan($i)
	set pin($i) [sm scan_file_next $scan($i) 0]
	echo scanned $i  $pin($i)
    }
    # copy to each output file
    echo a = $a, pin($a) = $pin($a)
    for {set i  $a} {$i <= [expr {$b+$a}] } {incr i} {
	if {[string compare $pin($i) "NULL"] == 0} { break }
	echo $i
	for {set j [expr {$b+1}] } {$j <= [expr {$b + $x}]} {incr j} {
	    echo writing to $f($j)
	    sm create_rec $f($j) $hdr $objsize $body
	}
	echo $i
	echo pin($i) = $pin($i)
	set rec [sm pin_rid $pin($i)]
	sm pin_unpin $pin($i)
	set pin([expr {$i+1}]) [sm scan_file_next $scan($i) 0]
    }
    for {set i $a} {$i <= [expr {$b+$a}] } {incr i} {
	echo destroying scan $i  $scan($i)
	sm scan_file_destroy $scan($i)
	echo destroyed $i  $scan($i)
    }
    echo doit $a $b $x
}

echo phase 1...
sm begin_xct

doit 1 $nfiles1 $nfiles2

echo cleaning up...
# clean up phase 1 files
for {set i 1} {$i <= $nfiles1} {incr i} {
    sm destroy_file $f($i)
}

doit [expr {$nfiles1+1}] $nfiles2 $nfiles3
for {set i [expr {$nfiles1+1}] } {$i <= $nfiles2} {incr i} {
    echo destroying file $f($i)
    sm destroy_file $f($i)
}

doit [expr {$nfiles3+1}]  $nfiles4 1
for {set i [expr {$nfiles2+1}] } {$i <= $nfiles3} {incr i} {
    echo destroying file $f($i)
    sm destroy_file $f($i)
}

for {set i [expr {$nfiles3+1}] } {$i <= $nfiles4} {incr i} {
    echo destroying file $f($i)
    sm destroy_file $f($i)
}

sm commit_xct

unset f k i
unset nfiles1 nfiles2 nfiles3 nfiles4 nobjs
unset objsize

unset hdr body
unset id_body_width 
unset rec

# echo [sm gather_stats]
