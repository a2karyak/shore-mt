# --------------------------------------------------------------- #
# -- Copyright (c) 1994, 1995 Computer Sciences Department,    -- #
# -- University of Wisconsin-Madison, subject to the terms     -- #
# -- and conditions given in the file COPYRIGHT.  All Rights   -- #
# -- Reserved.                                                 -- #
# --------------------------------------------------------------- #

############################################################################
#
#  This script tests hierarchical locking:  when a {IS,SH} or {IX,SIX,UD,EX}
#  lock is acquired on a record (file), IS or IX lock is put on the file and
#  volume (volume) that contain the record (file).
#
############################################################################

set rec_modes 		{ SH EX }
set file_modes 		{ IS IX SH SIX UD EX }
set rid			"k(s(10.0).100.200)"
set fid			"s(10.0)"
set vid			"10"

set table(IS)	IS
set table(IX)	IX
set table(SH)	IS
set table(SIX)	IX
set table(UD)	IX
set table(EX)	IX

proc lockit { obj modes parents  } {
    global table
    global verbose_flag

    foreach x $modes {

	sm begin_xct

	sm lock $obj $x LONG

	set obj_lock  [ sm query_lock $obj ]
	if { $verbose_flag } { puts stdout "$x" nonewline}

	foreach p $parents {
	    set parent_lock [ sm query_lock $p ]
	    if { $verbose_flag } { puts stdout "\t$parent_lock" nonewline }	
	    assert { expr [string compare $parent_lock $table($x)] == 0}
	}
	verbose ""

	sm commit_xct
    }
}

#####  main  #####

echo "TEST:\tHierarchical Locking on Record and File"

verbose "********  Set lock on record  ********"
lockit $rid $rec_modes "$fid $vid"

verbose "********  Set lock on file  ********"
lockit $fid $file_modes "$vid"

echo "STATUS:\tOK"

unset table rec_modes file_modes
unset rid fid vid
