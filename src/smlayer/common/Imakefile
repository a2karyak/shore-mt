/*<std-header style='imakefile' orig-src='shore'>

 $Id: Imakefile,v 1.146 2001/09/17 18:58:40 bolo Exp $

SHORE -- Scalable Heterogeneous Object REpository

Copyright (c) 1994-99 Computer Sciences Department, University of
                      Wisconsin -- Madison
All Rights Reserved.

Permission to use, copy, modify and distribute this software and its
documentation is hereby granted, provided that both the copyright
notice and this permission notice appear in all copies of the
software, derivative works or modified versions, and any portions
thereof, and that both notices appear in supporting documentation.

THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
"AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

This software was developed with support by the Advanced Research
Project Agency, ARPA order number 018 (formerly 8230), monitored by
the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
Further funding for this work was provided by DARPA through
Rome Research Laboratory Contract No. F30602-97-2-0247.

  -- do not edit anything above this line --   </std-header>*/

INCLUDE_DIRS += \
	$(FC_INCL)		\
	$(STHREAD_INCL)		\
	$(COMMON_INCL)

init_file_group(libcommon)
init_file_group(regex)
init_file_group(installed)

libcommon.h += \
	auto_release.h basics.h bitmap.h devid_t.h			\
	dual_assert.h hash_lru.h hash_lru.cpp hostname.h kvl_t.h	\
	latch.h lid_t.h option.h regex_posix.h serial_t.h		\
	serial_t_data.h	sm_vas.h stid_t.h tid_t.h umemcmp.h vec_t.h	\
	vid_t.h zvec_t.h

libcommon.cpp += \
	basics.cpp bitmap.cpp devid_t.cpp latch.cpp lid_t.cpp kvl_t.cpp	\
	option.cpp regex_posix.cpp					\
	serial_t.cpp stid_t.cpp tid_t.cpp vec_mkchunk.cpp		\
	vec_t.cpp vid_t.cpp

ERROR_FILES = \
	opt_error_def_gen.h	\
	opt_errmsg_gen.h	\
	opt_einfo_gen.h		\
	opt_einfo_bakw_gen.h

/* NB: all regex stuff is taken from Spencer's 
 * regex/ after the _i.h files and regex.h
 * have been generated.
 */

regex.h += \
	regcomp_i.h regerror_i.h regex.h	\
	regex2.h regex_cclass.h regex_cname.h	\
	regex_engine.cpp regex_engine_i.h regex_utils.h

regex.cpp += \
	regcomp.cpp regerror.cpp regexec.cpp \
	regfree.cpp

#ifndef IS_ALPHA_OSF1
add_to_group(libcommon, regex)
#else
unused_group(regex)
#endif

gen_error_codes(libcommon, opt_error.dat, -d, $(ERROR_FILES))

libcommon.lib_name = $(COMMON_LIB)
build_library(libcommon)

used_group(installed)

installed.h = \
	basics.h vec_t.h zvec_t.h lid_t.h serial_t.h dual_assert.h	\
	serial_t_data.h tid_t.h option.h devid_t.h			\
	sm_vas.h stid_t.h vid_t.h latch.h bitmap.h kvl_t.h
installed.gen.h = opt_error_def_gen.h

install_copy(include/common, $(installed.h))
install_copy(include/common, $(installed.gen.h))
install_copy(lib, $(COMMON_LIB))


#if defined(BUILD_DEFAULT_SMLAYER_TESTS) || defined(BUILD_EVERYTHING)
POST_SUBDIRS += $(COMMON_TESTS_BUILD_DIR)
#else
nondefault_subdirs($(COMMON_TESTS_BUILD_DIR))
#endif
