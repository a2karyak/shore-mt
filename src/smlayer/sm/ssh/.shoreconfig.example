# <std-header style='shell' orig-src='shore'>
#
#  $Id: .shoreconfig.example,v 1.15 1999/07/19 21:55:51 nhall Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#
# Example .shoreconfig file for ssh
#
# Edit a copy of this as you see fit, and save it as
# ~/.shoreconfig or ./.shoreconfig.
#

# Options have the form:
#		type.class.progname.option
#
# type = general type of program ("ssh" for the ssh server)
# class = class of program within type (server or client or whatever
#		application chooses)
# progname = program executable name (don't use a.out)
# option = specific name of option
#
# e.g., ssh.server.ssh.ssh_libdir  
#

#
# STORAGE MANAGER OPTIONS
#

# Specify the log directory for all server programs
*.server.*.sm_logging: yes

#
# if you want your log to be on a different device,
# change sm_logdir or make log a link somewhere into
# the desired device
#
*.server.*.sm_logdir: ./log

# use sm_reformat_log to reinitialize a log that is a raw device
*.server.*.sm_reformat_log: no

# Need 100000 to get through the scripts with 32KB pages
*.server.*.sm_logsize: 100000

# Specify the sm buffer pool size for any program
# 400 pages, or 3.2 meg:
*.server.*.sm_bufpoolsize: 3200

# diskrw process ...
# Making this relative assumes that we have a symbolic
# link from . to wherever it's installed:
*.server.*.sm_diskrw: ../../sthread/diskrw
#
# Warn VAS when log is this % full -- set low for testing purposes
*.server.*.sm_log_warn: 45

#
# SSH OPTIONS
#
# This is the tcl library directory for ssh
ssh.server.*.ssh_libdir: ./lib
# location of the .sshrc file
ssh.server.*.ssh_sshrc: ./.sshrc


