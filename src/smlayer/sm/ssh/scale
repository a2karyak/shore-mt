#!/bin/sh 

# <std-header style='shell' orig-src='shore'>
#
#  $Id: scale,v 1.8 1999/06/07 19:04:56 kupsch Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>


doit() 
{
    ob=$1
    no=$2
    log=$3
    udc=0

    totsize=`expr $ob \* $no`
    echo totsize = $totsize 
    bpksize=`expr $totsize / 1000`
    # Make it a fifth the total amt of data written
    bpksize=`expr $bpksize / 5`
    echo bpksize = $bpksize 

    echo LOGGING $log
    echo ---- objsize $ob -- nobjs $no -- update count $udc
    file="-Vf ../scripts/bng.2"

    list="1 2 3 4"
    count="1"
    for nd in $list; do
	echo ---- ---- $nd disks
	# bp=`expr $bpksize \* $nd`
	bp=$bpksize
	no=`expr $totsize / $nd`
	no=`expr $no / $ob`
	args="-sm_logging $log -t objsize=$ob -t nobjs=$no -t update_count=$udc $file"
	for i in $count; do
	    /bin/rm -f log/* volumes/*
	    echo ssh -sm_bufpoolsize $bp -ssh_sshrc .sshrc.$nd $args
	    ssh -s -sm_bufpoolsize $bp -ssh_sshrc .sshrc.$nd $args
	done
    done

}

do_selected_file_sizes() 
{
    logging=$1

    # 10 meg total per disk
    # buffer pool size is given for 1 disk; it's
    # increased for more disks
    objsize=100
    nobjs=900000

    doit $objsize $nobjs $logging

    # 10 meg total per disk
    objsize=1000
    nobjs=90000

    doit $objsize $nobjs $logging
}


# do_selected_file_sizes yes
do_selected_file_sizes no
