#!/bin/ksh 

# <std-header style='shell' orig-src='shore'>
#
#  $Id: all,v 1.10 1999/06/07 19:06:19 kupsch Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>


function run_thread3 {
    thread3 | sort
}

function execute  {
    print -n "$1\t--> running --> "
    print "running $1" >> $2

    if [[ -a $3 ]]; then
	of=/tmp/$$
	if $1 > $of 2>&1; then
	    if diff $of $3 >> $2; then
		print "ok"
	    else
		print "failed"
	    fi
	else
	    print "failed"
	fi
	cat $of >> $2
	rm $of

    elif $1 >> $2 2>&1; then
	print "ok"
    else
	print "failed"
    fi
}


outf=/tmp/all$$.out
rm -f /tmp/all*.out
execute thread1 $outf
execute thread2 $outf
execute run_thread3 $outf thread3.out
execute thread4 $outf

print
print "result in $outf"
